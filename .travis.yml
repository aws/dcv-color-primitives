language: rust
addons:
  apt:
    packages:
      - libssl-dev

rust:
  - stable
  - beta
  - nightly

jobs:
  allow_failures:
    - rust: nightly
  fast_finish: true

install:
  - rustup target add wasm32-unknown-unknown
  - rustup component add rustfmt
  - curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

script:
  # Check formatting. Show diff in case of failure
  - cargo fmt --all -- --check
  # Default build
  - cargo build --verbose --all
  # Test
  - cargo test --verbose
  - cargo test --verbose --tests --features "test_instruction_sets"
  # Test wasm target
  - cargo check --target wasm32-unknown-unknown
  - wasm-pack test --node
  # Generate assembly for automatic inspection
  - cargo rustc --release -- --emit asm
  # Search for undefined instructions in the crate.
  # This is symptom of unhandled situations leading to panic
  # or slice indices out of bounds
  - "! grep -q 'ud2' target/release/deps/dcv_color_primitives*.s"
  # Search for accidental performance degradation.
  # For example, non-inlined avx2 code might produce
  # function generation for every used intrinsics
  - "! grep -q 'call.*_mm256' target/release/deps/dcv_color_primitives*.s"

after_success: |
  if [[ "$TRAVIS_RUST_VERSION" == stable ]]; then
    cargo install cargo-tarpaulin &&
    cargo tarpaulin -l --ignore-panics --tests --fail-under 90 --exclude-files benches --features "test_instruction_sets" --out Xml &&
    bash <(curl -s https://codecov.io/bash)
  fi
